package com.hugootoch.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LocalizacaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocalizacaoAllPropertiesEquals(Localizacao expected, Localizacao actual) {
        assertLocalizacaoAutoGeneratedPropertiesEquals(expected, actual);
        assertLocalizacaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocalizacaoAllUpdatablePropertiesEquals(Localizacao expected, Localizacao actual) {
        assertLocalizacaoUpdatableFieldsEquals(expected, actual);
        assertLocalizacaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocalizacaoAutoGeneratedPropertiesEquals(Localizacao expected, Localizacao actual) {
        assertThat(actual)
            .as("Verify Localizacao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocalizacaoUpdatableFieldsEquals(Localizacao expected, Localizacao actual) {
        assertThat(actual)
            .as("Verify Localizacao relevant properties")
            .satisfies(a -> assertThat(a.getEndereco()).as("check endereco").isEqualTo(expected.getEndereco()))
            .satisfies(a -> assertThat(a.getCidade()).as("check cidade").isEqualTo(expected.getCidade()))
            .satisfies(a -> assertThat(a.getEstado()).as("check estado").isEqualTo(expected.getEstado()))
            .satisfies(a -> assertThat(a.getCep()).as("check cep").isEqualTo(expected.getCep()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocalizacaoUpdatableRelationshipsEquals(Localizacao expected, Localizacao actual) {
        // empty method
    }
}
